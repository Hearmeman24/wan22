name: Build and Push to ECR via EC2

on:
  push:
    branches:
      - build

jobs:
  build-on-ec2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Build on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            # Go to or clone repo
            cd ~/ComfyUI-Bot-Wan-Template || \
              git clone https://github.com/Hearmeman24/ComfyUI-Bot-Wan-Template.git ~/ComfyUI-Bot-Wan-Template && \
              cd ~/ComfyUI-Bot-Wan-Template

            # Make sure weâ€™re on the correct branch
            git fetch origin dev && git checkout dev && git pull origin dev

            # Login to ECR
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
              | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO }}

            # Build and push
            docker build -t ${{ secrets.ECR_REPO }}/wan-bot-with-models . > build.log 2>&1
            docker push ${{ secrets.ECR_REPO }}/wan-bot-with-models >> build.log 2>&1
            echo "ðŸš€ Docker build and push completed. Last 50 lines:"
            tail -n 50 build.log
          EOF

      - name: ðŸš¨ Notify Discord of successful deploy
        if: ${{ success() }}
        env:
          WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -X POST "$WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d '{
              "username": "Comfy Builder",
              "embeds": [{
                "title": "âœ… ECR Deploy Succeeded",
                "description": "Branch **'${{ github.ref_name }}'** was built and deployed.",
                "color": 3066993,
                "fields": [
                  { "name": "Repository", "value": "`${{ secrets.ECR_REPO }}/wan-bot-with-models`", "inline": false },
                  { "name": "Run", "value": "[#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})", "inline": false }
                ]
              }]
            }'
